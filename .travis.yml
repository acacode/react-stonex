language: node_js
node_js:
  - "node"

cache:
  yarn: true
  directories:
    - "node_modules"

before_install:
  - export PACKAGE_VERSION=$(node -p "require('./package.json').version")
  - export NPM_REMOTE_VERSION=$(npm view react-stonex version)
  - export PACKAGE_NAME=$(node -p "require('./package.json').name")
  - export BRANCH_IS_TAG=$(node -p "/^([0-9].[0-9].[0-9]+((-(alpha|beta))|))$/.test('${TRAVIS_BRANCH}')")
  - export GIT_TAG=$PACKAGE_VERSION
  - export GIT_LOG="$(git log --pretty=format:"* %s (%h)")"
  - export PROJECT_NAME="acacode/react-stonex"
  - echo "branch is a tag ? ${BRANCH_IS_TAG}"

install:
  - yarn install --frozen-lockfile

jobs:
  include:
    - stage: publish
      if: env(BRANCH_IS_TAG) != true
      name: "Create Github Release"
      before_deploy:
        - git config --global user.email "builds@travis-ci.com"
        - git config --global user.name "Travis CI"
        - git tag $GIT_TAG -a -m "Generated tag from TravisCI for build $TRAVIS_BUILD_NUMBER from $TRAVIS_BRANCH"
        - git push -q https://$GITHUB_TOKEN@github.com/$PROJECT_NAME --tags
        - zip -r release.zip dist lib es index.d.ts LICENSE README.md package.json
        - ls -l
      deploy:
        provider: releases
        name: "Release ${PACKAGE_VERSION}"
        body: "https://github.com/$PROJECT_NAME/blob/develop/CHANGELOG.md#256"
        overwrite: true
        skip_cleanup: true
        api_key:
          secure: ${GITHUB_TOKEN}
        file:
          - release.zip
        on:
          all_branches: true
          repo: $PROJECT_NAME
      after_deploy:
        - echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
        - npm publish

notifications:
  email:
    - ${NOTIFY_EMAIL}